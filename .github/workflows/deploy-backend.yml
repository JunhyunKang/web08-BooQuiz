name: Deploy Backend

on:
    workflow_call:
        inputs:
            github_ref:
                required: true
                type: string
            github_sha:
                required: true
                type: string
            docker_username:
                required: true
                type: string
            docker_password:
                required: true
                type: string
            dodcker_tag:
                required: true
                type: string
            node_env:
                required: true
                type: string
            session_secret:
                required: true
                type: string
            public_ssh_key:
                required: true
                type: string
            private_ssh_key:
                required: true
                type: string
            deploy_user:
                required: true
                type: string
            public_server_ip:
                required: true
                type: string
            private_server_ip:
                required: true
                type: string


jobs:
    build-backend:
        runs-on: ubuntu-latest
        name: Build Backend
        environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ inputs.docker_username }}
                  password: ${{ inputs.docker_password }}
            - name: Build and Push Docker Image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: apps/backend/Dockerfile
                  push: true
                  tags: ${{ inputs.docker_username }}/booquiz-backend:${{inputs.docker.tag}}
                  cache-from: type=registry,ref=${{ inputs.docker_username }}/booquiz-backend:cache
                  cache-to: type=registry,ref=${{ inputs.docker_username }}/booquiz-backend:cache,mode=max
                  build-args: |
                      NODE_ENV=${{inputs.node_env}}
                      SESSION_SECRET=${{inputs.session_secret}}


    deploy-backend:
        needs: build-backend
        runs-on: ubuntu-latest
        name: Deploy Backend
        steps:
            - name: Set up SSH agent and add SSH key
              run: |
                  eval "$(ssh-agent -s)"
                  echo "SSH_AGENT_PID=$SSH_AGENT_PID" >> $GITHUB_ENV
                  echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV

                  # SSH 프라이빗 키 추가
                  echo "${{ inputs.public_ssh_key }}" > public_server_key.pem
                  chmod 600 public_server_key.pem
                  ssh-add public_server_key.pem

                  # 프라이빗 서버 키 추가
                  echo "${{ inputs.private_ssh_key }}" > private_server_key.pem
                  chmod 600 private_server_key.pem
                  ssh-add private_server_key.pem
              shell: bash
            - name: Access To Public Server and Deploy to Private Server
              run: |
                  DEPLOY_USER=${{ inputs.deploy_user }}              # 유저 이름
                  PUBLIC_SERVER_IP=${{ inputs.public_server_ip }}     # 퍼블릭 서버 IP
                  PRIVATE_SERVER_IP=${{ inputs.private_server_ip }}   # 프라이빗 서버 IP
                  DOCKER_USERNAME=${{ inputs.docker_username }}

                  # 퍼블릭 서버의 호스트 키를 known_hosts에 추가
                  mkdir -p ~/.ssh
                  ssh-keyscan -H $PUBLIC_SERVER_IP >> ~/.ssh/known_hosts

                  # SSH 에이전트 포워딩을 사용하여 퍼블릭 서버에 접속하여 프라이빗 서버에 배포
                  ssh -i public_server_key.pem -A $DEPLOY_USER@$PUBLIC_SERVER_IP << EOF
                      # 프라이빗 서버의 호스트 키를 퍼블릭 서버의 known_hosts에 추가
                      mkdir -p ~/.ssh
                      ssh-keyscan -H $PRIVATE_SERVER_IP >> ~/.ssh/known_hosts

                      # 프라이빗 서버에서 Docker Hub 로그인 및 이미지 배포
                      ssh $DEPLOY_USER@$PRIVATE_SERVER_IP "sudo docker pull $DOCKER_USERNAME/booquiz-backend:${{inputs.dodcker_tag}} && \
                          sudo docker stop booquiz-backend || true && \
                          sudo docker rm booquiz-backend || true && \
                          sudo docker run -d --name booquiz-backend -p 3000:3000 $DOCKER_USERNAME/booquiz-backend:${{inputs.dodcker_tag}} && \
                          sudo docker image prune -f"
                  EOF
                  exit
              shell: bash
